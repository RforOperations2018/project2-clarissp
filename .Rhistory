),
axis.text.y =
element_text(
family = "American Typewriter"
),
legend.position = "bottom",
legend.box = "horizontal"
)
ggplot(data = sw_permits, aes(x = sw_permits$COUNTY, fill = sw_permits$STATUS)) +
geom_bar(stat = "count") +
labs(title = "Active Underground Permits in Pennsylvania",
x= "County",
y= "Count of Permits", fill = "Status"
) +
scale_fill_brewer(palette = "Pastel1") +
theme_bw() +
theme(plot.title =
element_text(face = "bold",
family = "American Typewriter"),
axis.title.x =
element_text(
family = "American Typewriter"
),
axis.text.x =
element_text(
family = "American Typewriter",
angle = 90,
vjust = 0.5
),
axis.title.y =
element_text(
family = "American Typewriter"
),
axis.text.y =
element_text(
family = "American Typewriter"
),
legend.position = "bottom",
legend.box = "horizontal"
)
ggplot(data = sw_permits, aes(x = sw_permits$COUNTY)) +
geom_bar(stat = "count") +
labs(title = "Active Underground Permits in Pennsylvania",
x= "County",
y= "Count of Permits", fill = "Status"
) +
scale_fill_brewer(palette = "Pastel1") +
theme_bw() +
theme(plot.title =
element_text(face = "bold",
family = "American Typewriter"),
axis.title.x =
element_text(
family = "American Typewriter"
),
axis.text.x =
element_text(
family = "American Typewriter",
angle = 90,
vjust = 0.5
),
axis.title.y =
element_text(
family = "American Typewriter"
),
axis.text.y =
element_text(
family = "American Typewriter"
),
legend.position = "bottom",
legend.box = "horizontal"
)
ggplot(data = sw_permits, aes(x = sw_permits$COUNTY, fill = sw_permits$STATUS)) +
geom_bar(stat = "count") +
labs(title = "Active Underground Permits in Pennsylvania",
x= "County",
y= "Count of Permits", fill = "Status"
) +
scale_fill_brewer(palette = "Pastel1") +
theme_bw() +
theme(plot.title =
element_text(face = "bold",
family = "American Typewriter"),
axis.title.x =
element_text(
family = "American Typewriter"
),
axis.text.x =
element_text(
family = "American Typewriter",
angle = 90,
vjust = 0.5
),
axis.title.y =
element_text(
family = "American Typewriter"
),
axis.text.y =
element_text(
family = "American Typewriter"
),
legend.position = "bottom",
legend.box = "horizontal"
)
ggplot(data = sw_permits, aes(x = sw_permits$COUNTY, fill = sw_permits$STATUS)) +
geom_bar(stat = "identity") +
labs(title = "Active Underground Permits in Pennsylvania",
x= "County",
y= "Count of Permits", fill = "Status"
) +
scale_fill_brewer(palette = "Pastel1") +
theme_bw() +
theme(plot.title =
element_text(face = "bold",
family = "American Typewriter"),
axis.title.x =
element_text(
family = "American Typewriter"
),
axis.text.x =
element_text(
family = "American Typewriter",
angle = 90,
vjust = 0.5
),
axis.title.y =
element_text(
family = "American Typewriter"
),
axis.text.y =
element_text(
family = "American Typewriter"
),
legend.position = "bottom",
legend.box = "horizontal"
)
ggplot(data = sw_permits, aes(x = sw_permits$COUNTY, fill = sw_permits$STATUS)) +
geom_bar(stat = "count", "identity") +
labs(title = "Active Underground Permits in Pennsylvania",
x= "County",
y= "Count of Permits", fill = "Status"
) +
scale_fill_brewer(palette = "Pastel1") +
theme_bw() +
theme(plot.title =
element_text(face = "bold",
family = "American Typewriter"),
axis.title.x =
element_text(
family = "American Typewriter"
),
axis.text.x =
element_text(
family = "American Typewriter",
angle = 90,
vjust = 0.5
),
axis.title.y =
element_text(
family = "American Typewriter"
),
axis.text.y =
element_text(
family = "American Typewriter"
),
legend.position = "bottom",
legend.box = "horizontal"
)
#CSV for Permit data
permitdata <- read.csv("Active_Underground_Permit_Boundaries.csv")
View(permitdata)
sw_permitdata <- subset(permitdata$COUNTY["Armstrong", "Beaver", "Cambria", "Greene", "Indiana", "Somerset", "Washington", "Westmoreland"])
sw_permitdata <- subset(permitdata$COUNTY, select=c("Armstrong", "Beaver", "Cambria", "Greene", "Indiana", "Somerset", "Washington", "Westmoreland")
sw_permitdata <- subset(permitdata$COUNTY, select=c("Armstrong", "Beaver", "Cambria", "Greene", "Indiana", "Somerset", "Washington", "Westmoreland"))
sw_permitdata <- permitdata[c(COUNTY), c("Armstrong", "Beaver", "Cambria", "Greene", "Indiana", "Somerset", "Washington", "Westmoreland")]
sw_permitdata <- permitdata[c("COUNTY"), c("Armstrong", "Beaver", "Cambria", "Greene", "Indiana", "Somerset", "Washington", "Westmoreland")]
sw_permitdata <- subset(permitdata, COUNTY = c("Armstrong", "Beaver", "Cambria", "Greene", "Indiana", "Somerset", "Washington", "Westmoreland"))
levels(sw_permitdata$COUNTY)
sw_permitdata <- subset(permitdata, COUNTY = c("Armstrong", "Beaver", "Cambria", "Greene", "Indiana", "Somerset", "Washington", "Westmoreland"))
levels(sw_permitdata$COUNTY)
View(sw_permitdata)
sw_permitdata <- subset(permitdata, COUNTY = "Armstrong" | COUNTY = "Beaver" | COUNTY = "Cambria" | COUNTY = "Greene" | COUNTY =  "Indiana" | COUNTY = "Somerset" | COUNTY =  "Washington" | COUNTY = "Westmoreland")
sw_permitdata <- filter(permitdata, COUNTY = "Armstrong" | COUNTY = "Beaver" | COUNTY = "Cambria" | COUNTY = "Greene" | COUNTY =  "Indiana" | COUNTY = "Somerset" | COUNTY =  "Washington" | COUNTY = "Westmoreland")
sw_permitdata <- filter(permitdata, COUNTY == "Armstrong" | COUNTY == "Beaver" | COUNTY == "Cambria" | COUNTY == "Greene" | COUNTY ==  "Indiana" | COUNTY == "Somerset" | COUNTY ==  "Washington" | COUNTY == "Westmoreland")
View(sw_permitdata)
plot_ly(data = data.frame(sw_permitdata), labels = permits$COUNTY, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent', insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'label+percent', showlegend = TRUE)
ggplot(data = sw_permitdata, aes(x = COUNTY, fill = STATUS)) +
geom_bar(stat = "count", "identity") +
labs(title = "Active Underground Permits in Pennsylvania",
x= "County",
y= "Count of Permits", fill = "Status"
) +
scale_fill_brewer(palette = "Pastel1") +
theme_bw() +
theme(plot.title =
element_text(face = "bold",
family = "American Typewriter"),
axis.title.x =
element_text(
family = "American Typewriter"
),
axis.text.x =
element_text(
family = "American Typewriter",
angle = 90,
vjust = 0.5
),
axis.title.y =
element_text(
family = "American Typewriter"
),
axis.text.y =
element_text(
family = "American Typewriter"
),
legend.position = "bottom",
legend.box = "horizontal"
)
ggplot(data = sw_permitdata, aes(x = COUNTY, fill = STATUS)) +
geom_bar(stat = "count") +
labs(title = "Active Underground Permits in Pennsylvania",
x= "County",
y= "Count of Permits", fill = "Status"
) +
scale_fill_brewer(palette = "Pastel1") +
theme_bw() +
theme(plot.title =
element_text(face = "bold",
family = "American Typewriter"),
axis.title.x =
element_text(
family = "American Typewriter"
),
axis.text.x =
element_text(
family = "American Typewriter",
angle = 90,
vjust = 0.5
),
axis.title.y =
element_text(
family = "American Typewriter"
),
axis.text.y =
element_text(
family = "American Typewriter"
),
legend.position = "bottom",
legend.box = "horizontal"
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
#API for the Permit data
permits <- readOGR("http://data-padep-1.opendata.arcgis.com/datasets/cea4b401782a4178b139c6b5c6a929f2_48.geojson")
permitcounty <- c("Armstrong", "Beaver", "Cambria", "Greene", "Indiana", "Somerset", "Washington", "Westmoreland")
sw_permits <- permits[permits$COUNTY %in% permitcounty,]
#CSV for Permit data
permitdata <- read.csv("Active_Underground_Permit_Boundaries.csv")
sw_permitdata <- filter(permitdata, COUNTY == "Armstrong" | COUNTY == "Beaver" | COUNTY == "Cambria" | COUNTY == "Greene" | COUNTY ==  "Indiana" | COUNTY == "Somerset" | COUNTY ==  "Washington" | COUNTY == "Westmoreland")
View(sw_permitdata)
head(sw_permitdata)
output$permittable <- DT::renderDataTable({
subset(globalInput(), select = c("MINE", "OPERATOR", "TYPE", "STATUS", "COAL_SEAM", "COUNTY"))
})
runApp()
runApp()
runApp()
runApp()
setwd("~/Documents/GitHub/project2-clarissp")
runApp()
runApp()
url <- paste0("http://www.depgis.state.pa.us/arcgis/rest/services/emappa/eMapPA_External_Extraction/MapServer/48/query?where=COUNTY+IN+%28%27Armstrong%27%2C+%27Beaver%27%2C+%27Cambria%27%2C+%27Greene%27%2C+%27Indiana%27%2C+%27Somerset%27%2C+%27Washington%27%2C+%27Westmoreland%27%29",filter, "&text=&objectIds=&time=&geometry=&geometryType=esriGeometryPolygon&inSR=&spatialRel=esriSpatialRelWithin&relationParam=&outFields=*&returnGeometry=true&returnTrueCurves=false&maxAllowableOffset=&geometryPrecision=&outSR=&returnIdsOnly=false&returnCountOnly=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&returnZ=false&returnM=false&gdbVersion=&returnDistinctValues=false&resultOffset=&resultRecordCount=&queryByDistance=&returnExtentsOnly=false&datumTransformation=&parameterValues=&rangeValues=&f=geojson")
filter <- ifelse(length(input$counties) > 0,
paste0("COUNTY+IN+(%27", paste(input$counties, collapse = "%27,%27"),"%27)"),
"")
url <- paste0("http://data-padep-1.opendata.arcgis.com/datasets/cea4b401782a4178b139c6b5c6a929f2_48.geojson?where1=1",filter, "&text=&objectIds=&time=&geometry=&geometryType=esriGeometryPolygon&inSR=&spatialRel=esriSpatialRelWithin&relationParam=&outFields=*&returnGeometry=true&returnTrueCurves=false&maxAllowableOffset=&geometryPrecision=&outSR=&returnIdsOnly=false&returnCountOnly=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&returnZ=false&returnM=false&gdbVersion=&returnDistinctValues=false&resultOffset=&resultRecordCount=&queryByDistance=&returnExtentsOnly=false&datumTransformation=&parameterValues=&rangeValues=&f=geojson")
filter <- ifelse(length(input$counties) > 0,
paste0("COUNTY+IN+(%27", paste(input$counties, collapse = "%27,%27"),"%27)"),
"")
runApp()
runApp()
runApp()
runApp()
ggplot(data = sw_permitdata, aes(x = COUNTY, fill = STATUS)) +
geom_bar(stat = "count") +
labs(title = "Active Underground Permits in Pennsylvania",
x= "County",
y= "Count of Permits", fill = "Status"
) +
scale_fill_brewer(palette = "Pastel1") +
theme_bw() +
theme(plot.title =
element_text(face = "bold",
family = "American Typewriter"),
axis.title.x =
element_text(
family = "American Typewriter"
),
axis.text.x =
element_text(
family = "American Typewriter",
angle = 90,
vjust = 0.5
),
axis.title.y =
element_text(
family = "American Typewriter"
),
axis.text.y =
element_text(
family = "American Typewriter"
),
legend.position = "bottom",
legend.box = "horizontal"
)
plot_ly(data = data.frame(sw_permitdata), labels = permits$COUNTY, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent', insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'label+percent', showlegend = TRUE)
leaflet() %>%
addPolygons(data = pa_swcounty,
weight = 2,
color = "black") %>%
addPolygons(data = permits,
weight = 1.5,
color = "blue") %>%
addMarkers(data = goodact) %>%
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
#Shapefile for County Boundaries
pacounty <- readOGR("PA_Counties_clip.shp")
#Subsetting counties to Southwest counties
swcounty <- c("Armstrong", "Allegheny", "Beaver", "Cambria", "Fayette", "Greene", "Indiana", "Somerset", "Washington", "Westmoreland")
pa_swcounty <- pacounty[pacounty$NAME %in% swcounty,]
permits <- permits()
leaflet() %>%
addPolygons(data = pa_swcounty,
weight = 2,
color = "black") %>%
addPolygons(data = permits,
weight = 1.5,
color = "blue") %>%
addMarkers(data = goodact) %>%
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
permits <- permits()
leaflet() %>%
addPolygons(data = pa_swcounty,
weight = 2,
color = "black") %>%
addPolygons(data = permits,
weight = 1.5,
color = "blue") %>%
#addMarkers(data = goodact) %>%
addProviderTiles("Esri.WorldGrayCanvas", group = "Gray Canvas", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("CartoDB.DarkMatterNoLabels", group = "Dark Matter", options = providerTileOptions(noWrap = TRUE)) %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topography", options = providerTileOptions(noWrap = TRUE)) %>%
addLayersControl(
baseGroups = c("Gray Canvas", "Dark Matter", "Topography"),
options = layersControlOptions(collapsed = TRUE)
)
#API for Environmental Good Samaritan Act points
goodact <- readOGR("http://data-padep-1.opendata.arcgis.com/datasets/f5487b2bd296492097994a8ab5bd4c9b_261.geojson")
runApp()
runApp()
runApp()
runApp()
#API for Environmental Good Samaritan Act points
goodact <- readOGR("http://data-padep-1.opendata.arcgis.com/datasets/f5487b2bd296492097994a8ab5bd4c9b_261.geojson")
#API for Environmental Good Samaritan Act points
goodact <- readOGR("http://data-padep-1.opendata.arcgis.com/datasets/f5487b2bd296492097994a8ab5bd4c9b_261.geojson")
#API for Environmental Good Samaritan Act points
goodact <- readOGR("http://data-padep-1.opendata.arcgis.com/datasets/f5487b2bd296492097994a8ab5bd4c9b_261.geojson")
#API for Environmental Good Samaritan Act points
goodact <- readOGR("http://data-padep-1.opendata.arcgis.com/datasets/67ed627a525548d5900c1b6964b8e619_25.geojson")
runApp()
#Creating county column for Environmental Good Samaritan Act points (goodact)
surfacemine$county <- over(goodact, pa_swcounty, fn = NULL)
proj4string(surfacemine)
#API for Environmental Good Samaritan Act points
surfacemine <- readOGR("http://data-padep-1.opendata.arcgis.com/datasets/67ed627a525548d5900c1b6964b8e619_25.geojson")
proj4string(surfacemine)
#Creating county column for Environmental Good Samaritan Act points (goodact)
surfacemine$county <- over(goodact, pa_swcounty, fn = NULL)
#Transofrming projection of counties to match the following two layers
proj4string(pa_swcounty) <- CRS("+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0")
pa_swcounty <- spTransform(pa_swcounty, CRS=CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"))
#Creating county column for Environmental Good Samaritan Act points (goodact)
surfacemine$county <- over(goodact, pa_swcounty, fn = NULL)
runApp()
runApp()
runApp()
permittype <- permittypeInput() %>%
ggplot(data = sw_permitdata, aes(x = COUNTY, fill = STATUS)) +
geom_bar(stat = "count") +
labs(title = "Active Underground Permits in Pennsylvania",
x= "County",
y= "Count of Permits", fill = "Status"
) +
scale_fill_brewer(palette = "Pastel1") +
theme_bw() +
theme(plot.title =
element_text(face = "bold",
family = "American Typewriter"),
axis.title.x =
element_text(
family = "American Typewriter"
),
axis.text.x =
element_text(
family = "American Typewriter",
angle = 90,
vjust = 0.5
),
axis.title.y =
element_text(
family = "American Typewriter"
),
axis.text.y =
element_text(
family = "American Typewriter"
),
legend.position = "bottom",
legend.box = "horizontal"
)
permittype <- sw_permitdata %>%
if (length(input$type) > 0 ) {
global <- subset(sw_permitdata, TYPE %in% input$type)
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ggplot(data = sw_permitdata, aes(x = COUNTY, fill = STATUS)) +
geom_bar(stat = "count") +
labs(title = "Active Underground Permits in Pennsylvania",
x= "County",
y= "Count of Permits", fill = "Status"
) +
scale_fill_brewer(palette = "Pastel1") +
theme_bw() +
theme(plot.title =
element_text(face = "bold",
family = "American Typewriter"),
axis.title.x =
element_text(
family = "American Typewriter"
),
axis.text.x =
element_text(
family = "American Typewriter",
angle = 90,
vjust = 0.5
),
axis.title.y =
element_text(
family = "American Typewriter"
),
axis.text.y =
element_text(
family = "American Typewriter"
),
legend.position = "bottom",
legend.box = "horizontal"
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(sw_permitdata)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
